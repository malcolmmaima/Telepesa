spring:
  application:
    name: api-gateway
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: telepesa_redis_password
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      routes:
        # Explicit pass-through for public auth endpoints
        - id: user-register
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/register
          filters:
            - name: SetPath
              args:
                template: /api/users/register
        - id: user-login
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/login
          filters:
            - name: SetPath
              args:
                template: /api/users/login
        # Static Files Route (uploads)
        - id: static-files
          uri: lb://user-service
          predicates:
            - Path=/uploads/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET
        # User Service Routes
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/users/(?<remaining>.*)
                replacement: /api/users/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Account Service Routes
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/v1/accounts/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/accounts/(?<remaining>.*)
                replacement: /api/v1/accounts/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Transaction Service Routes
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/api/v1/transactions/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/transactions/(?<remaining>.*)
                replacement: /api/v1/transactions/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Loan Service Routes
        - id: loan-service
          uri: lb://loan-service
          predicates:
            - Path=/api/v1/loans/**
          filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Notification Service Routes
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/notifications/(?<remaining>.*)
                replacement: /api/v1/notifications/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # WebSocket Notification Route
        - id: notification-websocket
          uri: lb:ws://notification-service
          predicates:
            - Path=/ws/notifications
          filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
        # Transfer Service Routes
        - id: transfer-service
          uri: lb://transfer-service
          predicates:
            - Path=/api/v1/transfers/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/transfers/(?<remaining>.*)
                replacement: /api/v1/transfers/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Bill Payment Service Routes
        - id: bill-payment-service
          uri: lb://bill-payment-service
          predicates:
            - Path=/api/v1/bills/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/bills/(?<remaining>.*)
                replacement: /api/bills/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # Billers Service Routes
        - id: billers-service
          uri: lb://bill-payment-service
          predicates:
            - Path=/api/v1/billers/**
          filters:
            - name: RewritePath
              args:
                regexp: /api/v1/billers/(?<remaining>.*)
                replacement: /api/v1/billers/${remaining}
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                methods: GET,POST,PUT,DELETE
        # User Service Debug Route
        # - id: user-service-debug
        #   uri: http://httpbin.org/status/418
        #   predicates:
        #     - Path=/api/v1/users/**
# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET:default-secret-key-for-development-only-change-in-production}
# Logging for debugging
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    com.maelcolium.telepesa.gateway: DEBUG
management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: "*,info,env"
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
