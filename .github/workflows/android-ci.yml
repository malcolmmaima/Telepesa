name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Frontend/Android/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Frontend/Android/**'
  workflow_dispatch:

jobs:
  android-build:
    name: Android Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend/Android/customer-app
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk-version: '25.1.8937393'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Validate Gradle Wrapper
      run: ./gradlew --version
      
    - name: Run Spotless check
      run: ./gradlew spotlessCheck --no-daemon
      
    - name: Run Spotless apply (if needed)
      run: ./gradlew spotlessApply --no-daemon
      continue-on-error: true
      
    - name: Run Detekt static analysis
      run: ./gradlew detekt --no-daemon
      continue-on-error: true
      
    - name: Run ktlint check
      run: ./gradlew ktlintCheck --no-daemon
      continue-on-error: true
      
    - name: Run unit tests
      run: ./gradlew test --no-daemon
      
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport --no-daemon
      continue-on-error: true
      
    - name: Build debug APK
      run: ./gradlew assembleDebug --no-daemon
      
    - name: Build release APK
      run: ./gradlew assembleRelease --no-daemon
      continue-on-error: true
      
    - name: Build debug AAB
      run: ./gradlew bundleDebug --no-daemon
      continue-on-error: true
      
    - name: Run Android Lint
      run: ./gradlew lintDebug --no-daemon
      continue-on-error: true
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-test-results
        path: |
          Frontend/Android/customer-app/app/build/reports/tests/
          Frontend/Android/customer-app/app/build/reports/jacoco/
          Frontend/Android/customer-app/app/build/reports/lint-results-debug.xml
          Frontend/Android/customer-app/app/build/reports/detekt/
      continue-on-error: true
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: Frontend/Android/customer-app/app/build/outputs/apk/debug/*.apk
      continue-on-error: true
      
    - name: Upload release APK
      uses: actions/upload-artifact@v3
      with:
        name: android-release-apk
        path: Frontend/Android/customer-app/app/build/outputs/apk/release/*.apk
      continue-on-error: true
      
    - name: Upload debug AAB
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-aab
        path: Frontend/Android/customer-app/app/build/outputs/bundle/debug/*.aab
      continue-on-error: true

  android-instrumented-tests:
    name: Android Instrumented Tests
    runs-on: ubuntu-latest
    needs: android-build
    defaults:
      run:
        working-directory: Frontend/Android/customer-app
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk-version: '25.1.8937393'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Run instrumented tests
      run: ./gradlew connectedAndroidTest --no-daemon
      continue-on-error: true
      
    - name: Upload instrumented test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-instrumented-test-results
        path: Frontend/Android/customer-app/app/build/reports/androidTests/
      continue-on-error: true

  android-security-scan:
    name: Android Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend/Android/customer-app
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Build debug APK for security scan
      run: ./gradlew assembleDebug --no-daemon
      
    - name: Run OWASP Dependency Check
      run: ./gradlew dependencyCheckAnalyze --no-daemon
      continue-on-error: true
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-security-scan-results
        path: |
          Frontend/Android/customer-app/app/build/reports/dependency-check-report.html
          Frontend/Android/customer-app/app/build/reports/dependency-check-report.json
      continue-on-error: true

  android-quality-gate:
    name: Android Quality Gate
    runs-on: ubuntu-latest
    needs: [android-build, android-instrumented-tests, android-security-scan]
    if: always()
    steps:
    - name: Quality Gate Summary
      run: |
        echo "## Android Quality Gate Results" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Build & Tests | ${{ needs.android-build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Instrumented Tests | ${{ needs.android-instrumented-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Scan | ${{ needs.android-security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        
        # Fail the job if any critical step failed
        if [[ "${{ needs.android-build.result }}" == "failure" ]]; then
          echo "❌ Android build failed!" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        if [[ "${{ needs.android-security-scan.result }}" == "failure" ]]; then
          echo "⚠️ Security scan failed, but continuing..." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "✅ Android quality checks completed!" >> $GITHUB_STEP_SUMMARY
