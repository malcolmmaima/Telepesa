version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: telepesa-postgres
    environment:
      POSTGRES_DB: telepesa_db
      POSTGRES_USER: telepesa_user
      POSTGRES_PASSWORD: telepesa_password
      POSTGRES_MULTIPLE_DATABASES: user_db,account_db,transaction_db,loan_db,transfer_db,bill_payment_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U telepesa_user -d telepesa_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: telepesa-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: telepesa_admin
      MONGO_INITDB_ROOT_PASSWORD: telepesa_password
      MONGO_INITDB_DATABASE: notification_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: telepesa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass telepesa_redis_password
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: telepesa-zipkin
    ports:
      - "9411:9411"
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9411/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Queue
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: telepesa-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:3.5
    container_name: telepesa-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "29092:29092"
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service Discovery
  eureka-server:
    build:
      context: ../eureka-server
      dockerfile: Dockerfile
    container_name: telepesa-eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
      EUREKA_CLIENT_FETCH_REGISTRY: false
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    container_name: telepesa-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      JWT_SECRET: myVerySecretJWTKeyForTelepesaUserService123!@#
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Microservices
  user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    container_name: telepesa-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: myVerySecretJWTKeyForTelepesaUserService123!@#
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  account-service:
    build:
      context: ../account-service
      dockerfile: Dockerfile
    container_name: telepesa-account-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/account_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: myVerySecretJWTKeyForTelepesaUserService123!@#
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  transaction-service:
    build:
      context: ../transaction-service
      dockerfile: Dockerfile
    container_name: telepesa-transaction-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/transaction_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  loan-service:
    build:
      context: ../loan-service
      dockerfile: Dockerfile
    container_name: telepesa-loan-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/loan_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    container_name: telepesa-notification-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://telepesa_admin:telepesa_password@mongodb:27017/notification_db?authSource=admin
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      mongodb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  transfer-service:
    build:
      context: ../transfer-service
      dockerfile: Dockerfile
    container_name: telepesa-transfer-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/transfer_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: myVerySecretJWTKeyForTelepesaUserService123!@#
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  bill-payment-service:
    build:
      context: ../bill-payment-service
      dockerfile: Dockerfile
    container_name: telepesa-bill-payment-service
    ports:
      - "8087:8087"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bill_payment_db
      SPRING_DATASOURCE_USERNAME: telepesa_user
      SPRING_DATASOURCE_PASSWORD: telepesa_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_BASE_URL: http://zipkin:9411
      REDIS_HOST: redis
      REDIS_PASSWORD: telepesa_redis_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PASSWORD: telepesa_redis_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: myVerySecretJWTKeyForTelepesaUserService123!@#
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - telepesa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  telepesa-network:
    driver: bridge 